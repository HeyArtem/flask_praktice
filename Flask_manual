Flask

$ mkdir flask_praktice
$ cd flask_praktice/
$ python3 -m venv venv
$ source venv/bin/activate

$ sudo apt update
$ sudo apt upgrade -y 
$ sudo apt autoremove
$ sudo apt autoclean 

$ pip install -U pip setuptools Flask

$ touch app.py (рекомендовано всегда назыать app.py)
$ code .


        from flask import Flask


        app = Flask(__name__)


        @app.route("/")
        def hello_world():
           return "Hello, World!"


        def main():
            app.run(debug=True)


        if __name__ == "__main__":
            main()


# start
$ python app.py 

открываю в браузер на указанном порту (* Running on http://127.0.0.1:5000). В браузере будет "Hello, World!"


Добавляю словарь и функцию которая его выводит:
        from flask import Flask


        app = Flask(__name__)


        # декоратор ('это базовый или отцовский) route используется, чтобы связать URL адрес (http://127.0.0.1:5000/)  с функцией
        @app.route("/")
        def hello_world():
            return "Hello, World!"


        about_me = {
           "name": "Евгений",
           "surname": "Юрченко",
           "email": "eyurchenko@specialist.ru"
        }


        @app.route("/about")
        def about():
           return about_me


        def main():
            app.run(debug=True) #debug=True - включен режим отладки (как будто перезагружать не нужно после изменения, так же будет отчет об ошипбке на HTML-СТРАНИЦЕ)


        if __name__ == "__main__":
            main()

Запускаю
$ python app.py
и увижу неправильный вывод инфы. Не выводится русский текст! Нужно добавить:
        app = Flask(__name__)
        app.config['JSON_AS_ASCII'] = False

Запускаю
$ python app.py
все ок, выводится русский текст

Допишу новый url и функцию:
        from flask import Flask


        app = Flask(__name__)
        app.config['JSON_AS_ASCII'] = False


        # декоратор ('это базовый или отцовский) route используется, чтобы связать URL адрес (http://127.0.0.1:5000/)  с функцией
        @app.route("/")
        def hello_world():
            return "Hello, World!"


        about_me = {
           "name": "Артем",
           "surname": "Рожков",
           "email": "artem_white@mail.ru"
        }


        @app.route("/about")
        def about():
           return about_me


        art_lite_dict = {
            'avto': 'Lexus',
            'side': 'South',
            'color': 'Red',
        }


        # url = /art
        @app.route("/art")
        def art_lite():
           return art_lite_dict


        def main():
            app.run(debug=True) #debug=True - включен режим отладки (как будто перезагружать не нужно после изменения, так же будет отчет об ошипбке на HTML-СТРАНИЦЕ)


        if __name__ == "__main__":
            main()
           
Запускаю
$ python app.py, выводится мой словарь


Теперь работаю со списком словарей. Создаю список словарей quotes и функцию с декоратором:
        from flask import Flask


        app = Flask(__name__)
        app.config['JSON_AS_ASCII'] = False


        quotes = [
           {
               "id": 3,
               "author": "Rick Cook",
               "text": "Программирование сегодня — это гонка разработчиков программ, стремящихся писать программы с большей и лучшей идиотоустойчивостью, и вселенной, которая пытается создать больше отборных идиотов. Пока вселенная побеждает."
           },
           {
               "id": 5,
               "author": "Waldi Ravens",
               "text": "Программирование на С похоже на быстрые танцы на только что отполированном полу людей с острыми бритвами в руках."
           },
           {
               "id": 6,
               "author": "Mosher’s Law of Software Engineering",
               "text": "Не волнуйтесь, если что-то не работает. Если бы всё работало, вас бы уволили."
           },
           {
               "id": 8,
               "author": "Yoggi Berra",
               "text": "В теории, теория и практика неразделимы. На практике это не так."
           },

        ]


        # декоратор ('это базовый или отцовский) route используется, чтобы связать URL адрес (http://127.0.0.1:5000/)  с функцией
        @app.route("/")
        def hello_world():
            return "Hello, World!"


        about_me = {
           "name": "Артем",
           "surname": "Рожков",
           "email": "artem_white@mail.ru"
        }


        @app.route("/about")
        def about():
           return about_me


        art_lite_dict = {
            'avto': 'Lexus',
            'side': 'South',
            'color': 'Red',
        }


        # url = /art
        @app.route("/art")
        def art_lite():
           return art_lite_dict

        # вывод цитат
        @app.route("/quotes")
        def get_all_quotes():
           return quotes


        def main():
            app.run(debug=True) #debug=True - включен режим отладки (как будто перезагружать не нужно после изменения, так же будет отчет об ошипбке на HTML-СТРАНИЦЕ)


        if __name__ == "__main__":
            main()

Запускаю
$ python app.py
все ок, цитаты в браузере


СОЗДАМ ФУНКЦИЮ, КОТОРАЯ ВЫВЕДЕТ КОЛИЧЕСТВО ЦИТАТ И ЧТО БЫ ВОВД БЫЛ СЛОВАРЕМ:
        # счетчик количества цитат. Внимание в url идет корневой каталог(quotes)/объект с которым работаем(digital)/digital
        @app.route("/quotes/digital")
        def get_all_quotes_digital():
            return {
                "digital": len(quotes)
            }
Запускаю
$ python app.py
все ок, в браузере:
        {
          "digital": 4
        }
        
        
СДЕЛАЮ ФУНКЦ И URL СЛУЧАЙНЫХ ЦИТАТ:
        from flask import Flask
        import random


        app = Flask(__name__)
        app.config['JSON_AS_ASCII'] = False


        quotes = [
           {
               "id": 3,
               "author": "Rick Cook",
               "text": "Программирование сегодня — это гонка разработчиков программ, стремящихся писать программы с большей и лучшей идиотоустойчивостью, и вселенной, которая пытается создать больше отборных идиотов. Пока вселенная побеждает."
           },
           {
               "id": 5,
               "author": "Waldi Ravens",
               "text": "Программирование на С похоже на быстрые танцы на только что отполированном полу людей с острыми бритвами в руках."
           },
           {
               "id": 6,
               "author": "Mosher’s Law of Software Engineering",
               "text": "Не волнуйтесь, если что-то не работает. Если бы всё работало, вас бы уволили."
           },
           {
               "id": 8,
               "author": "Yoggi Berra",
               "text": "В теории, теория и практика неразделимы. На практике это не так."
           },

        ]


        # декоратор ('это базовый или отцовский) route используется, чтобы связать URL адрес (http://127.0.0.1:5000/)  с функцией
        @app.route("/")
        def hello_world():
            return "Hello, World!"


        about_me = {
           "name": "Артем",
           "surname": "Рожков",
           "email": "artem_white@mail.ru"
        }


        @app.route("/about")
        def about():
           return about_me


        art_lite_dict = {
            'avto': 'Lexus',
            'side': 'South',
            'color': 'Red',
        }


        # url = /art
        @app.route("/art")
        def art_lite():
           return art_lite_dict

        # вывод цитат
        @app.route("/quotes")
        def get_all_quotes():
           return quotes


        # счетчик количества цитат. Внимание в url идет корневой каталог(quotes)/объект с которым работаем(digital)/digital
        @app.route("/quotes/digital")
        def get_all_quotes_digital():
            return {
                "digital": len(quotes)
            }


        # вывод рандомных цитат
        @app.route("/quotes/random")
        def get_all_quotes_random():
            return random.choice(quotes)


        def main():
            app.run(debug=True) #debug=True - включен режим отладки (как будто перезагружать не нужно после изменения, так же будет отчет об ошипбке на HTML-СТРАНИЦЕ)


        if __name__ == "__main__":
            main()
            
Запускаю
$ python app.py
при обновлении страницы, выводится рандомная цитата



        -- Работа с БД sqlite3 --          
Устанавливаю DBeaver (утилита для визуальной работы с БД.) Артем, ясно же, что при активированной venv:
        $ pip install ipython
        $ ipython - для чего? открылось какое то диалоговое окно в терминале
        
create sql_create_table.py

 




   














Вопросы:
-что такое овезцойк?

-у меня так не работает
        @app.route("/quotes/<int:id>", methods=['DELETE'])
        def delete_post(id):    
            for quote in quotes:
                # выполняется abort & python дальше не думет
                abort(404, f"Указанного id= {id}, не существует")
                if id == quote["id"]:
                    quotes.remove(quote)
                    return f"Цитата {id} удалена", 200
            
       😫️ а так работает:
        @app.route("/quotes/<int:id>", methods=['DELETE'])
        def delete_post(id):    
            for quote in quotes:       
                if id == quote["id"]:
                    quotes.remove(quote)
                    return f"Цитата {id} удалена", 200
                 # выполняется abort & python дальше не думет
            abort(404, f"Указанного id= {id}, не существует")
            
-проговорить с Данилой Дандер методы
    









